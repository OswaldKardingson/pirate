# we are using separate workflow because CI producing test binaries with CPPFLAGS=-DTESTMODE

# name: Pirate build - Windows cross compile 20.04


# on:
#   push:
#     branches:
#     - master
#     - beta


# jobs:

#   windows-build:
#     name: Windows Build (mingw)
#     runs-on: ubuntu-20.04

#     steps:
#       - uses: actions/checkout@v4
#       - name: Install deps (Windows)
#         env:
#           DEBIAN_FRONTEND: noninteractive
#         run: |
#           sudo apt-get update  # prevents repo404 errors on apt-remove below
#           sudo apt-get upgrade -y
#           sudo apt-get install -y build-essential pkg-config m4 g++-multilib autoconf libtool libncurses-dev unzip git python3 python3-zmq zlib1g-dev wget libcurl4-gnutls-dev bsdmainutils curl libsodium-dev bison mingw-w64
#           sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
#           sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
#       - name: Build (Windows)
#         run: |
#           ./zcutil/build-qt-win.sh -j$(nproc)
#           strip src/pirated.exe
#           strip src/pirate-cli.exe
#           strip pirate-qt-win.exe
#           zip --junk-paths pirate-win src/pirated.exe src/pirate-cli.exe
#           zip --junk-paths pirate-qt-win pirate-qt-win.exe
#       - name: Upload pirate-win.zip as artifact
#         uses: actions/upload-artifact@v1
#         with:
#           name: pirate-win
#           path: ./pirate-win.zip
#       - name: Upload pirate-qt-win.zip as artifact
#         uses: actions/upload-artifact@v1
#         with:
#           name: pirate-qt-win
#           path: ./pirate-qt-win.zip
