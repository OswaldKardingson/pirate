# Copyright (c) 2016-2020 The Zcash developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or https://www.opensource.org/licenses/mit-license.php .

TESTS += pirate-gtest
bin_PROGRAMS += pirate-gtest

# tool for generating our public parameters
pirate_gtest_SOURCES = \
	gtest/main.cpp \
	gtest/gtestutils.h \
	gtest/gtestutils.cpp \
	gtest/test_block.cpp \
	gtest/test_checktransaction.cpp \
	gtest/json_test_vectors.cpp \
    gtest/json_test_vectors.h

# These tests are order-dependent, because they
# depend on global state (see #1539)
if ENABLE_WALLET
pirate_gtest_SOURCES += \
	wallet/gtest/test_wallet_zkeys.cpp
endif

pirate_gtest_SOURCES += \
	gtest/test_tautology.cpp \
	gtest/test_deprecation.cpp \
	gtest/test_httprpc.cpp \
	gtest/test_joinsplit.cpp \
	gtest/test_keys.cpp \
	gtest/test_keystore.cpp \
	gtest/test_noteencryption.cpp \
	gtest/test_merkletree.cpp \
	gtest/test_metrics.cpp \
	gtest/test_rpc.cpp \
	gtest/test_sapling_note.cpp \
	gtest/test_transaction_builder.cpp \
	gtest/test_upgrades.cpp \
	gtest/test_libzcash_utils.cpp \
	gtest/test_paymentdisclosure.cpp \
	gtest/test_pedersen_hash.cpp \
	gtest/test_checkblock.cpp \
	gtest/test_zip32.cpp

if ENABLE_WALLET
pirate_gtest_SOURCES += \
	wallet/gtest/test_wallet.cpp
endif

if TARGET_WINDOWS
pirate_gtest_SOURCES += test-komodo/komodo-test-res.rc
endif

pirate_gtest_CPPFLAGS = $(pirated_CPPFLAGS)

pirate_gtest_LDADD = -lgtest -lgmock $(pirated_LDADD) $(BDB_LIBS)

pirate_gtest_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static

if TARGET_DARWIN
pirate_gtest_LDFLAGS += -framework Security
pirate_gtest_LDFLAGS += $(COMMON_FORCE_LOAD_FLAGS)
endif

# ---------------------------------------------------------------------------
# JSON test vectors needed by certain gtest suites
# ---------------------------------------------------------------------------

JSON_TEST_FILES = \
	 test/data/sapling_key_components.json \
	 test/data/merkle_roots.json \
	 test/data/merkle_roots_empty.json \
	 test/data/merkle_serialization.json \
	 test/data/merkle_witness_serialization.json \
	 test/data/merkle_path.json \
	 test/data/merkle_commitments.json \
	 test/data/merkle_roots_sapling.json \
	 test/data/merkle_roots_empty_sapling.json \
	 test/data/merkle_serialization_sapling.json \
	 test/data/merkle_witness_serialization_sapling.json \
	 test/data/merkle_path_sapling.json \
	 test/data/merkle_commitments_sapling.json

GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h)

BUILT_SOURCES += $(GENERATED_TEST_FILES)

nodist_pirate_gtest_SOURCES = $(GENERATED_TEST_FILES)

# Ensure the primary target depends on them
pirate_gtest_SOURCES += $(JSON_TEST_FILES)

# Pattern rule to turn a *.json file into a C header that embeds the file as a
# byte array inside the json_tests namespace. Matches the logic in
# src/Makefile.test.include to keep behaviour identical across test suites.

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"